#get contracts by id with auth -> 200
GET  http://localhost:3001/contracts/1
Content-Type: application/json
profile_id:1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(response.body.hasOwnProperty("id"));
    client.assert(response.body.hasOwnProperty("status"));
  });

  client.test("response content-type is json", function() {
    var type = response.contentType.mimeType;
    client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
  });
%}

###
#get contracts by id without auth -> 401 Unauthorized
GET  http://localhost:3001/contracts/1
Content-Type: application/json

> {%
  client.test("fail", function() {
    client.assert(response.status === 401, "Unauthorized");
  });
%}

###
#get all non terminated contracts of user (client or contractor) with profile_id -> 200
GET  http://localhost:3001/contracts
Content-Type: application/json
profile_id:1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length === 3);
  });

  client.test("response content-type is json", function() {
    var type = response.contentType.mimeType;
    client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
  });
%}


###
#get all unpaid not terminated jobs for user (client or contractor) with profile_id -> 200
GET  http://localhost:3001/jobs/unpaid
Content-Type: application/json
profile_id:1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length === 2);
  });

  client.test("response content-type is json", function() {
    var type = response.contentType.mimeType;
    client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
  });
%}

###
# get the clients the paid the most for jobs in the time range. without limit-> 200
GET  http://localhost:3001/admin/best-clients?start=2020-01-01T00:00:00&end=2023-01-10T00:00:00
Content-Type: application/json
profile_id:1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length === 2);
  });


  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length[0].totalPaid === 2020);
  });

  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length === 2);
  });

  client.test("response content-type is json", function() {
    var type = response.contentType.mimeType;
    client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
  });
%}

###
# get the clients the paid the most for jobs in the time range. with limit 10 -> 200
GET  http://localhost:3001/admin/best-clients?start=2020-01-01T00:00:00&end=2023-01-10T00:00:00&limit=1
Content-Type: application/json
profile_id:1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length[0].totalPaid === 2020);
  });

  client.test("response", function() {
    client.assert(Array.isArray(response.body));
    client.assert(response.body.length === 1);
  });
%}

###
# get the prof that earned the most money (sum of jobs paid) for any contactor in the time range -> 200
GET  http://localhost:3001/admin/best-profession?start=2020-01-01T00:00:00&end=2023-01-10T00:00:00
Content-Type: application/json
profile_id:1

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(response.body.profession === "Programmer");
    client.assert(response.body.totalReceived === 2683);
  });

%}


###
# deposits money into the client balance -> 200
POST  http://localhost:3001/balances/deposit/1
Content-Type: application/json
profile_id:1

{
  "amount": 50
}

> {%
  client.test("success", function() {
    client.assert(response.status === 200, "Response status is 200");
  });

  client.test("response", function() {
    client.assert(response.body.id === 1);
    client.assert(response.body.balance > 0);
  });

  client.test("response content-type is json", function() {
    var type = response.contentType.mimeType;
    client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
  });
%}


###
# pay for a job by job id. client balance need to be >= the amount to pay -> 200
POST  http://localhost:3001/jobs/1/pay
Content-Type: application/json
profile_id:1

